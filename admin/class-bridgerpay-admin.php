<?php

/**
 * The admin-specific functionality of the plugin.
 *
 * @link       https://www.bridgerpay.com/
 * @since      1.0.0
 *
 * @package    Bridgerpay
 * @subpackage Bridgerpay/admin
 */

/**
 * The admin-specific functionality of the plugin.
 *
 * Defines the plugin name, version, and two examples hooks for how to
 * enqueue the admin-specific stylesheet and JavaScript.
 *
 * @package    Bridgerpay
 * @subpackage Bridgerpay/admin
 * @author     BridgerPay <info@bridgerpay.com>
 */
class Bridgerpay_Admin {

	/**
	 * The ID of this plugin.
	 *
	 * @since    1.0.0
	 * @access   private
	 * @var      string    $plugin_name    The ID of this plugin.
	 */
	private $plugin_name;

	/**
	 * The version of this plugin.
	 *
	 * @since    1.0.0
	 * @access   private
	 * @var      string    $version    The current version of this plugin.
	 */
	private $version;

	/**
	 * Initialize the class and set its properties.
	 *
	 * @since    1.0.0
	 * @param      string    $plugin_name       The name of this plugin.
	 * @param      string    $version    The version of this plugin.
	 */
	public function __construct( $plugin_name, $version ) {

		$this->plugin_name = $plugin_name;
		$this->version = $version;

	}

	/**
	 * Register the stylesheets for the admin area.
	 *
	 * @since    1.0.0
	 */
	public function enqueue_styles() {

		/**
		 * This function is provided for demonstration purposes only.
		 *
		 * An instance of this class should be passed to the run() function
		 * defined in Bridgerpay_Loader as all of the hooks are defined
		 * in that particular class.
		 *
		 * The Bridgerpay_Loader will then create the relationship
		 * between the defined hooks and the functions defined in this
		 * class.
		 */

		wp_enqueue_style( $this->plugin_name, plugin_dir_url( __FILE__ ) . 'css/bridgerpay-admin.css', array(), $this->version, 'all' );

	}

	/**
	 * Register the JavaScript for the admin area.
	 *
	 * @since    1.0.0
	 */
	public function enqueue_scripts() {

		/**
		 * This function is provided for demonstration purposes only.
		 *
		 * An instance of this class should be passed to the run() function
		 * defined in Bridgerpay_Loader as all of the hooks are defined
		 * in that particular class.
		 *
		 * The Bridgerpay_Loader will then create the relationship
		 * between the defined hooks and the functions defined in this
		 * class.
		 */

		wp_enqueue_script( $this->plugin_name, plugin_dir_url( __FILE__ ) . 'js/bridgerpay-admin.js', array( 'jquery' ), $this->version, false );

	}

}

/**
 * Generated by the WordPress Option Page generator
 * at http://jeremyhixon.com/wp-tools/option-page/
 */

class BridgerPaySettings {
	private $bridgerpay_settings_options;

	public function __construct() {
		add_action( 'admin_menu', array( $this, 'bridgerpay_settings_add_plugin_page' ) );
		add_action( 'admin_init', array( $this, 'bridgerpay_settings_page_init' ) );
	}

	public function bridgerpay_settings_add_plugin_page() {
		add_menu_page(
			'BridgerPay Settings', // page_title
			'BridgerPay Settings', // menu_title
			'manage_options', // capability
			'bridgerpay-settings', // menu_slug
			array( $this, 'bridgerpay_settings_create_admin_page' ), // function
			'dashicons-money', // icon_url
			100 // position
		);
	}

	public function bridgerpay_settings_create_admin_page() {
		$this->bridgerpay_settings_options = get_option( 'bridgerpay_settings_option_name' ); ?>

		<div class="wrap">
			<h2>BridgerPay Settings</h2>
			<p>BridgerPay Settings</p>
			<?php settings_errors(); ?>

			<form method="post" action="options.php">
				<?php
					settings_fields( 'bridgerpay_settings_option_group' );
					do_settings_sections( 'bridgerpay-settings-admin' );
					submit_button();
				?>
			</form>
		</div>
	<?php }

	public function bridgerpay_settings_page_init() {
		register_setting(
			'bridgerpay_settings_option_group', // option_group
			'bridgerpay_settings_option_name', // option_name
			array( $this, 'bridgerpay_settings_sanitize' ) // sanitize_callback
		);

		add_settings_section(
			'bridgerpay_settings_setting_section', // id
			'Settings', // title
			array( $this, 'bridgerpay_settings_section_info' ), // callback
			'bridgerpay-settings-admin' // page
		);

		add_settings_field(
			'base_url_0', // id
			'Base URL', // title
			array( $this, 'base_url_0_callback' ), // callback
			'bridgerpay-settings-admin', // page
			'bridgerpay_settings_setting_section' // section
		);

		add_settings_field(
			'cashier_url_1', // id
			'Cashier URL', // title
			array( $this, 'cashier_url_1_callback' ), // callback
			'bridgerpay-settings-admin', // page
			'bridgerpay_settings_setting_section' // section
		);

		add_settings_field(
			'api_key_2', // id
			'API Key', // title
			array( $this, 'api_key_2_callback' ), // callback
			'bridgerpay-settings-admin', // page
			'bridgerpay_settings_setting_section' // section
		);

		add_settings_field(
			'cashier_key_3', // id
			'Cashier Key', // title
			array( $this, 'cashier_key_3_callback' ), // callback
			'bridgerpay-settings-admin', // page
			'bridgerpay_settings_setting_section' // section
		);

		add_settings_field(
			'username_4', // id
			'Username', // title
			array( $this, 'username_4_callback' ), // callback
			'bridgerpay-settings-admin', // page
			'bridgerpay_settings_setting_section' // section
		);

		add_settings_field(
			'password_5', // id
			'Password', // title
			array( $this, 'password_5_callback' ), // callback
			'bridgerpay-settings-admin', // page
			'bridgerpay_settings_setting_section' // section
		);
	}

	public function bridgerpay_settings_sanitize($input) {
		$sanitary_values = array();
		if ( isset( $input['base_url_0'] ) ) {
			$sanitary_values['base_url_0'] = sanitize_text_field( $input['base_url_0'] );
		}

		if ( isset( $input['cashier_url_1'] ) ) {
			$sanitary_values['cashier_url_1'] = sanitize_text_field( $input['cashier_url_1'] );
		}

		if ( isset( $input['api_key_2'] ) ) {
			$sanitary_values['api_key_2'] = sanitize_text_field( $input['api_key_2'] );
		}

		if ( isset( $input['cashier_key_3'] ) ) {
			$sanitary_values['cashier_key_3'] = sanitize_text_field( $input['cashier_key_3'] );
		}

		if ( isset( $input['username_4'] ) ) {
			$sanitary_values['username_4'] = sanitize_text_field( $input['username_4'] );
		}

		if ( isset( $input['password_5'] ) ) {
			$sanitary_values['password_5'] = sanitize_text_field( $input['password_5'] );
		}

		return $sanitary_values;
	}

	public function bridgerpay_settings_section_info() {

	}

	public function base_url_0_callback() {
		printf(
			'<input class="regular-text" type="text" name="bridgerpay_settings_option_name[base_url_0]" id="base_url_0" value="%s">',
			isset( $this->bridgerpay_settings_options['base_url_0'] ) ? esc_attr( $this->bridgerpay_settings_options['base_url_0']) : ''
		);
	}

	public function cashier_url_1_callback() {
		printf(
			'<input class="regular-text" type="text" name="bridgerpay_settings_option_name[cashier_url_1]" id="cashier_url_1" value="%s">',
			isset( $this->bridgerpay_settings_options['cashier_url_1'] ) ? esc_attr( $this->bridgerpay_settings_options['cashier_url_1']) : ''
		);
	}

	public function api_key_2_callback() {
		printf(
			'<input class="regular-text" type="text" name="bridgerpay_settings_option_name[api_key_2]" id="api_key_2" value="%s">',
			isset( $this->bridgerpay_settings_options['api_key_2'] ) ? esc_attr( $this->bridgerpay_settings_options['api_key_2']) : ''
		);
	}

	public function cashier_key_3_callback() {
		printf(
			'<input class="regular-text" type="text" name="bridgerpay_settings_option_name[cashier_key_3]" id="cashier_key_3" value="%s">',
			isset( $this->bridgerpay_settings_options['cashier_key_3'] ) ? esc_attr( $this->bridgerpay_settings_options['cashier_key_3']) : ''
		);
	}

	public function username_4_callback() {
		printf(
			'<input class="regular-text" type="text" name="bridgerpay_settings_option_name[username_4]" id="username_4" value="%s">',
			isset( $this->bridgerpay_settings_options['username_4'] ) ? esc_attr( $this->bridgerpay_settings_options['username_4']) : ''
		);
	}

	public function password_5_callback() {
		printf(
			'<input class="regular-text" type="text" name="bridgerpay_settings_option_name[password_5]" id="password_5" value="%s">',
			isset( $this->bridgerpay_settings_options['password_5'] ) ? esc_attr( $this->bridgerpay_settings_options['password_5']) : ''
		);
	}

}
if ( is_admin() )
	$bridgerpay_settings = new BridgerPaySettings();

/*
 * Retrieve this value with:
 * $bridgerpay_settings_options = get_option( 'bridgerpay_settings_option_name' ); // Array of All Options
 * $base_url_0 = $bridgerpay_settings_options['base_url_0']; // Base URL
 * $cashier_url_1 = $bridgerpay_settings_options['cashier_url_1']; // Cashier URL
 * $api_key_2 = $bridgerpay_settings_options['api_key_2']; // API Key
 * $cashier_key_3 = $bridgerpay_settings_options['cashier_key_3']; // Cashier Key
 * $username_4 = $bridgerpay_settings_options['username_4']; // Username
 * $password_5 = $bridgerpay_settings_options['password_5']; // Password
 */
